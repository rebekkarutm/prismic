// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

/**
 * Item in *Global Nav → Menu Items*
 */
export interface GlobalNavDocumentDataMenuItemsItem {
  /**
   * Menu Link field in *Global Nav → Menu Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: global_nav.menu_items[].menu_link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  menu_link: prismic.LinkField;

  /**
   * Menu Label field in *Global Nav → Menu Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: global_nav.menu_items[].menu_label
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  menu_label: prismic.KeyTextField;
}

/**
 * Content for Global Nav documents
 */
interface GlobalNavDocumentData {
  /**
   * Company Name field in *Global Nav*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: global_nav.company_name
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  company_name: prismic.RichTextField;

  /**
   * Menu Items field in *Global Nav*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: global_nav.menu_items[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  menu_items: prismic.GroupField<Simplify<GlobalNavDocumentDataMenuItemsItem>>;
}

/**
 * Global Nav document from Prismic
 *
 * - **API ID**: `global_nav`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type GlobalNavDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<GlobalNavDocumentData>,
    "global_nav",
    Lang
  >;

type HomepageDocumentDataSlicesSlice = SplitImageSlice | TextSliceSlice;

/**
 * Content for Homepage documents
 */
interface HomepageDocumentData {
  /**
   * Slice Zone field in *Homepage*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<HomepageDocumentDataSlicesSlice> /**
   * Meta Image field in *Homepage*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */;
  meta_image: prismic.ImageField<never>;

  /**
   * Meta Title field in *Homepage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: homepage.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Homepage*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  meta_description: prismic.RichTextField;
}

/**
 * Homepage document from Prismic
 *
 * - **API ID**: `homepage`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HomepageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<HomepageDocumentData>,
    "homepage",
    Lang
  >;

type InfoPageDocumentDataSlicesSlice =
  | EmbedSlice
  | TextSliceSlice
  | SplitImageSlice;

/**
 * Content for Info Page documents
 */
interface InfoPageDocumentData {
  /**
   * Slice Zone field in *Info Page*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: info_page.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<InfoPageDocumentDataSlicesSlice> /**
   * Meta Description field in *Info Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: info_page.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Info Page*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: info_page.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;

  /**
   * Meta Title field in *Info Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: info_page.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_title: prismic.KeyTextField;
}

/**
 * Info Page document from Prismic
 *
 * - **API ID**: `info_page`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type InfoPageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<InfoPageDocumentData>,
    "info_page",
    Lang
  >;

export type AllDocumentTypes =
  | GlobalNavDocument
  | HomepageDocument
  | InfoPageDocument;

/**
 * Primary content in *Embed → Primary*
 */
export interface EmbedSliceDefaultPrimary {
  /**
   * Background Color field in *Embed → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: embed.primary.background_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  background_color: prismic.SelectField<"Blue" | "Green">;

  /**
   * Text Color field in *Embed → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: embed.primary.text_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  text_color: prismic.SelectField<"Light" | "Dark">;

  /**
   * Title field in *Embed → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: embed.primary.title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.RichTextField;

  /**
   * Embed field in *Embed → Primary*
   *
   * - **Field Type**: Embed
   * - **Placeholder**: *None*
   * - **API ID Path**: embed.primary.embed
   * - **Documentation**: https://prismic.io/docs/field#embed
   */
  embed: prismic.EmbedField;
}

/**
 * Default variation for Embed Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type EmbedSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<EmbedSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *Embed*
 */
type EmbedSliceVariation = EmbedSliceDefault;

/**
 * Embed Shared Slice
 *
 * - **API ID**: `embed`
 * - **Description**: Embed
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type EmbedSlice = prismic.SharedSlice<"embed", EmbedSliceVariation>;

/**
 * Primary content in *SplitImage → Primary*
 */
export interface SplitImageSliceDefaultPrimary {
  /**
   * Background Color field in *SplitImage → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image.primary.background_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  background_color: prismic.SelectField<"Blue" | "Green">;

  /**
   * Text Color field in *SplitImage → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image.primary.text_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  text_color: prismic.SelectField<"Light" | "Dark">;

  /**
   * Image field in *SplitImage → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image.primary.image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Text field in *SplitImage → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;
}

/**
 * Default variation for SplitImage Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SplitImageSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<SplitImageSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *SplitImage → Primary*
 */
export interface SplitImageSliceImageRightPrimary {
  /**
   * Background Color field in *SplitImage → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image.primary.background_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  background_color: prismic.SelectField<"Blue" | "Green">;

  /**
   * Text Color field in *SplitImage → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image.primary.text_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  text_color: prismic.SelectField<"Light" | "Dark">;

  /**
   * Image field in *SplitImage → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image.primary.image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Text field in *SplitImage → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;
}

/**
 * Image Right variation for SplitImage Slice
 *
 * - **API ID**: `imageRight`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SplitImageSliceImageRight = prismic.SharedSliceVariation<
  "imageRight",
  Simplify<SplitImageSliceImageRightPrimary>,
  never
>;

/**
 * Primary content in *SplitImage → Primary*
 */
export interface SplitImageSliceImageWithButtonPrimary {
  /**
   * Background Color field in *SplitImage → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image.primary.background_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  background_color: prismic.SelectField<"Blue" | "Green">;

  /**
   * Text Color field in *SplitImage → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image.primary.text_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  text_color: prismic.SelectField<"Light" | "Dark">;

  /**
   * Image field in *SplitImage → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image.primary.image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Text field in *SplitImage → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * Button Link field in *SplitImage → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image.primary.button_link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  button_link: prismic.LinkField;

  /**
   * Button Label field in *SplitImage → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image.primary.button_label
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  button_label: prismic.KeyTextField;
}

/**
 * Image With Button variation for SplitImage Slice
 *
 * - **API ID**: `imageWithButton`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SplitImageSliceImageWithButton = prismic.SharedSliceVariation<
  "imageWithButton",
  Simplify<SplitImageSliceImageWithButtonPrimary>,
  never
>;

/**
 * Primary content in *SplitImage → Primary*
 */
export interface SplitImageSliceImageRightButtonLeftPrimary {
  /**
   * Background Color field in *SplitImage → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image.primary.background_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  background_color: prismic.SelectField<"Blue" | "Green">;

  /**
   * Text Color field in *SplitImage → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image.primary.text_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  text_color: prismic.SelectField<"Light" | "Dark">;

  /**
   * Image field in *SplitImage → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image.primary.image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Text field in *SplitImage → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * Button Link field in *SplitImage → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image.primary.button_link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  button_link: prismic.LinkField;

  /**
   * Button Label field in *SplitImage → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image.primary.button_label
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  button_label: prismic.KeyTextField;
}

/**
 * Image Right Button Left variation for SplitImage Slice
 *
 * - **API ID**: `imageRightButtonLeft`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SplitImageSliceImageRightButtonLeft = prismic.SharedSliceVariation<
  "imageRightButtonLeft",
  Simplify<SplitImageSliceImageRightButtonLeftPrimary>,
  never
>;

/**
 * Slice variation for *SplitImage*
 */
type SplitImageSliceVariation =
  | SplitImageSliceDefault
  | SplitImageSliceImageRight
  | SplitImageSliceImageWithButton
  | SplitImageSliceImageRightButtonLeft;

/**
 * SplitImage Shared Slice
 *
 * - **API ID**: `split_image`
 * - **Description**: SplitImage
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SplitImageSlice = prismic.SharedSlice<
  "split_image",
  SplitImageSliceVariation
>;

/**
 * Primary content in *TextSlice → Primary*
 */
export interface TextSliceSliceDefaultPrimary {
  /**
   * Text Field field in *TextSlice → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: text_slice.primary.text_field
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text_field: prismic.RichTextField;

  /**
   * Background Color field in *TextSlice → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: text_slice.primary.background_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  background_color: prismic.SelectField<"Blue" | "Green">;

  /**
   * Text Color field in *TextSlice → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: text_slice.primary.text_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  text_color: prismic.SelectField<"Light" | "Dark">;

  /**
   * Text Align field in *TextSlice → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: text_slice.primary.text_align
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  text_align: prismic.SelectField<"Left" | "Center">;
}

/**
 * Default variation for TextSlice Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TextSliceSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<TextSliceSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *TextSlice → Primary*
 */
export interface TextSliceSliceTextWithButtonPrimary {
  /**
   * Text Field field in *TextSlice → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: text_slice.primary.text_field
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text_field: prismic.RichTextField;

  /**
   * Background Color field in *TextSlice → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: text_slice.primary.background_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  background_color: prismic.SelectField<"Blue" | "Green">;

  /**
   * Text Color field in *TextSlice → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: text_slice.primary.text_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  text_color: prismic.SelectField<"Light" | "Dark">;

  /**
   * Text Align field in *TextSlice → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: text_slice.primary.text_align
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  text_align: prismic.SelectField<"Left" | "Center">;

  /**
   * Button Link field in *TextSlice → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: text_slice.primary.button_link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  button_link: prismic.LinkField;

  /**
   * Button Label field in *TextSlice → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: text_slice.primary.button_label
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  button_label: prismic.KeyTextField;
}

/**
 * Text with Button variation for TextSlice Slice
 *
 * - **API ID**: `textWithButton`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TextSliceSliceTextWithButton = prismic.SharedSliceVariation<
  "textWithButton",
  Simplify<TextSliceSliceTextWithButtonPrimary>,
  never
>;

/**
 * Primary content in *TextSlice → Primary*
 */
export interface TextSliceSliceTextButtonCenterPrimary {
  /**
   * Text Field field in *TextSlice → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: text_slice.primary.text_field
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text_field: prismic.RichTextField;

  /**
   * Background Color field in *TextSlice → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: text_slice.primary.background_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  background_color: prismic.SelectField<"Blue" | "Green">;

  /**
   * Text Color field in *TextSlice → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: text_slice.primary.text_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  text_color: prismic.SelectField<"Light" | "Dark">;

  /**
   * Text Align field in *TextSlice → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: text_slice.primary.text_align
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  text_align: prismic.SelectField<"Left" | "Center">;

  /**
   * Button Link field in *TextSlice → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: text_slice.primary.button_link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  button_link: prismic.LinkField;

  /**
   * Button Label field in *TextSlice → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: text_slice.primary.button_label
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  button_label: prismic.KeyTextField;
}

/**
 * Text Button Center variation for TextSlice Slice
 *
 * - **API ID**: `textButtonCenter`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TextSliceSliceTextButtonCenter = prismic.SharedSliceVariation<
  "textButtonCenter",
  Simplify<TextSliceSliceTextButtonCenterPrimary>,
  never
>;

/**
 * Slice variation for *TextSlice*
 */
type TextSliceSliceVariation =
  | TextSliceSliceDefault
  | TextSliceSliceTextWithButton
  | TextSliceSliceTextButtonCenter;

/**
 * TextSlice Shared Slice
 *
 * - **API ID**: `text_slice`
 * - **Description**: TextSlice
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TextSliceSlice = prismic.SharedSlice<
  "text_slice",
  TextSliceSliceVariation
>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      GlobalNavDocument,
      GlobalNavDocumentData,
      GlobalNavDocumentDataMenuItemsItem,
      HomepageDocument,
      HomepageDocumentData,
      HomepageDocumentDataSlicesSlice,
      InfoPageDocument,
      InfoPageDocumentData,
      InfoPageDocumentDataSlicesSlice,
      AllDocumentTypes,
      EmbedSlice,
      EmbedSliceDefaultPrimary,
      EmbedSliceVariation,
      EmbedSliceDefault,
      SplitImageSlice,
      SplitImageSliceDefaultPrimary,
      SplitImageSliceImageRightPrimary,
      SplitImageSliceImageWithButtonPrimary,
      SplitImageSliceImageRightButtonLeftPrimary,
      SplitImageSliceVariation,
      SplitImageSliceDefault,
      SplitImageSliceImageRight,
      SplitImageSliceImageWithButton,
      SplitImageSliceImageRightButtonLeft,
      TextSliceSlice,
      TextSliceSliceDefaultPrimary,
      TextSliceSliceTextWithButtonPrimary,
      TextSliceSliceTextButtonCenterPrimary,
      TextSliceSliceVariation,
      TextSliceSliceDefault,
      TextSliceSliceTextWithButton,
      TextSliceSliceTextButtonCenter,
    };
  }
}
